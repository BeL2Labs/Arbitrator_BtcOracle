{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xbfA4EdE8e7A52b18328E7B817bB7d13B3e587c91",
    "txHash": "0x9b93c7672cca770738f5d8e3ad9b4c44f6cb3492e88a5ddc7418256928019494"
  },
  "proxies": [
    {
      "address": "0xb136cF92EfE857911C4c7efcA1dE2424545b5186",
      "txHash": "0x8145c2d9827df999ef800a6f16e601db21617e201b78a6f6b77265f25c72fd1c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f90a934abb092a2b037c347d4ffa42ebc9c42682664478067192c975a6ad92b3": {
      "address": "0x0b06e7520C83915AA2205C709196fa3fB6B0d85e",
      "txHash": "0x8b50202337ddeb489fd1b74d7fc9b9a2448d09f8bd51004a0cbd7bc413674ba7",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "arbitrationRequestDuration",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:18"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:19"
          },
          {
            "label": "assetOracle",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:20"
          },
          {
            "label": "registerWhiteListContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:22"
          },
          {
            "label": "agreementContractWhitelist",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:25"
          },
          {
            "label": "tokenWhitelist",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:26"
          },
          {
            "label": "arbitratorInfo",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(ArbitratorInfo)4879_storage)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:28"
          },
          {
            "label": "arbitratorList",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:29"
          },
          {
            "label": "arbitrationData",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_bytes32,t_struct(ArbitrationData)4908_storage)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:30"
          },
          {
            "label": "zkpOrder",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bool)dyn_storage": {
            "label": "bool[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ArbitratorInfo)4879_storage)": {
            "label": "mapping(address => struct IArbitrator.ArbitratorInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ArbitrationData)4908_storage)": {
            "label": "mapping(bytes32 => struct IArbitrator.ArbitrationData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ArbitrationData)4908_storage": {
            "label": "struct IArbitrator.ArbitrationData",
            "members": [
              {
                "label": "requestID",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "btcTxToSign",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "btcTxSigned",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "script",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "merkleProof",
                "type": "t_struct(MerkleProofData)4866_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "utxos",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "blockHeight",
                "type": "t_uint32",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "wTxId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "prover",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lockBtcTx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "lockAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "15"
              }
            ],
            "numberOfBytes": "512"
          },
          "t_struct(ArbitratorInfo)4879_storage": {
            "label": "struct IArbitrator.ArbitratorInfo",
            "members": [
              {
                "label": "arbitrator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "registeredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "btcPublicKey",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakedToken",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(MerkleProofData)4866_storage": {
            "label": "struct IArbitrator.MerkleProofData",
            "members": [
              {
                "label": "proof",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "root",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "leaf",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "flags",
                "type": "t_array(t_bool)dyn_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "f0627d5e1cfb781823c1b9fe7342aadc48432f597a0dd61a92595cbf0e765960": {
      "address": "0x7ff425025002EFf865208980085040C26C252b8C",
      "txHash": "0x0c5333772eb374e10caa90cdef4686037ca28e9699147757423831e525b6ce64",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "arbitrationRequestDuration",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:18"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:19"
          },
          {
            "label": "assetOracle",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:20"
          },
          {
            "label": "registerWhiteListContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:22"
          },
          {
            "label": "agreementContractWhitelist",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:25"
          },
          {
            "label": "tokenWhitelist",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:26"
          },
          {
            "label": "arbitratorInfo",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(ArbitratorInfo)4838_storage)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:28"
          },
          {
            "label": "arbitratorList",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:29"
          },
          {
            "label": "arbitrationData",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_bytes32,t_struct(ArbitrationData)4867_storage)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:30"
          },
          {
            "label": "zkpOrder",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bool)dyn_storage": {
            "label": "bool[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ArbitratorInfo)4838_storage)": {
            "label": "mapping(address => struct IArbitrator.ArbitratorInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ArbitrationData)4867_storage)": {
            "label": "mapping(bytes32 => struct IArbitrator.ArbitrationData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ArbitrationData)4867_storage": {
            "label": "struct IArbitrator.ArbitrationData",
            "members": [
              {
                "label": "requestID",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "btcTxToSign",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "btcTxSigned",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "script",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "merkleProof",
                "type": "t_struct(MerkleProofData)4825_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "utxos",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "blockHeight",
                "type": "t_uint32",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "wTxId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "prover",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lockBtcTx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "lockAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "15"
              }
            ],
            "numberOfBytes": "512"
          },
          "t_struct(ArbitratorInfo)4838_storage": {
            "label": "struct IArbitrator.ArbitratorInfo",
            "members": [
              {
                "label": "arbitrator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "registeredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "btcPublicKey",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakedToken",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(MerkleProofData)4825_storage": {
            "label": "struct IArbitrator.MerkleProofData",
            "members": [
              {
                "label": "proof",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "root",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "leaf",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "flags",
                "type": "t_array(t_bool)dyn_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    }
  }
}
