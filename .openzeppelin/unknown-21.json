{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x1463cEE82115fC6FFdA5E759A1443cCbb99DAE7E",
    "txHash": "0x8ccb9cb748c87e0adf71e42ff6dbe3123f478806d051fe1c9c478144f22fb81c"
  },
  "proxies": [
    {
      "address": "0x1251d808b8102eC48f5Aa5BB0C1de021440047d9",
      "txHash": "0xe0e9bd7be231c2990f561c1ac3627500f8a77ec6c273fa2364bd01f2725796ab",
      "kind": "transparent"
    }
  ],
  "impls": {
    "07b5df0e0c7981d057e2102a9d6a96d2a81f60a6cf2c40525b91783ce96b434a": {
      "address": "0x7b9c2F6083014d724C193715004104556501be90",
      "txHash": "0xc3730cabb3a260f57c27524af1f107dc6b8ca600a9ae083983a5843bb4a28d25",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "arbitrationRequestDuration",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:15"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:16"
          },
          {
            "label": "assetOracle",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:17"
          },
          {
            "label": "registerWhiteListContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:18"
          },
          {
            "label": "agreementContractWhitelist",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:20"
          },
          {
            "label": "tokenWhitelist",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:21"
          },
          {
            "label": "arbitratorInfo",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(ArbitratorInfo)4353_storage)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:23"
          },
          {
            "label": "arbitratorList",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:24"
          },
          {
            "label": "arbitrationData",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_bytes32,t_struct(ArbitrationData)4377_storage)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bool)dyn_storage": {
            "label": "bool[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_enum(ArbitrationStatus)4329": {
            "label": "enum IArbitrator.ArbitrationStatus",
            "members": [
              "Pending",
              "Completed"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ArbitratorInfo)4353_storage)": {
            "label": "mapping(address => struct IArbitrator.ArbitratorInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ArbitrationData)4377_storage)": {
            "label": "mapping(bytes32 => struct IArbitrator.ArbitrationData)",
            "numberOfBytes": "32"
          },
          "t_struct(ArbitrationData)4377_storage": {
            "label": "struct IArbitrator.ArbitrationData",
            "members": [
              {
                "label": "requestID",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(ArbitrationStatus)4329",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "btcTxToSign",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "btcTxSigned",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "script",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "merkleProof",
                "type": "t_struct(MerkleProofData)4340_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "utxos",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "blockHeight",
                "type": "t_uint32",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(ArbitratorInfo)4353_storage": {
            "label": "struct IArbitrator.ArbitratorInfo",
            "members": [
              {
                "label": "arbitrator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "registeredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "btcPublicKey",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakedToken",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(MerkleProofData)4340_storage": {
            "label": "struct IArbitrator.MerkleProofData",
            "members": [
              {
                "label": "proof",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "root",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "leaf",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "flags",
                "type": "t_array(t_bool)dyn_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    }
  }
}
