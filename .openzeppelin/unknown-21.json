{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xA890Bf94292186dd41182736fdB521163c7BEa62",
    "txHash": "0xb11dbafce86eb3592d601f91924dbe0807a69827a68b94ba6eadd175dfe7c206"
  },
  "proxies": [
    {
      "address": "0xD0C8dFa17c264285D47cFD1a9C0e82be63354f33",
      "txHash": "0xb4585e21b66b6efa1d7d4ff4e42e6b7a19776a2dcb3e81bdc43eecab8d35fbda",
      "kind": "transparent"
    },
    {
      "address": "0xA811AA741d9B36522F28eB65163066DE4Fe4f0c6",
      "txHash": "0x23296f4b052c1cbe7957b1a2c7379f230421209dc5cc382c21ef4a45fa0923f0",
      "kind": "transparent"
    }
  ],
  "impls": {
    "a16f67b06d18522b5dd3cb7833cc7bd63ac976a2f314c8686b393bd0d510c88f": {
      "address": "0x5a70906103bCE98Dc337A27C01c4220C99B028cc",
      "txHash": "0x991d8b9fbb70d77cedfb9b3ed436c5b461d555776f5dc9ed615ab0d16cfc9644",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "arbitrationRequestDuration",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:16"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:17"
          },
          {
            "label": "assetOracle",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:18"
          },
          {
            "label": "registerWhiteListContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:20"
          },
          {
            "label": "agreementContractWhitelist",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:23"
          },
          {
            "label": "tokenWhitelist",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:24"
          },
          {
            "label": "arbitratorInfo",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(ArbitratorInfo)4453_storage)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:26"
          },
          {
            "label": "arbitratorList",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:27"
          },
          {
            "label": "arbitrationData",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_bytes32,t_struct(ArbitrationData)4476_storage)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:28"
          },
          {
            "label": "zkpOrder",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bool)dyn_storage": {
            "label": "bool[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ArbitratorInfo)4453_storage)": {
            "label": "mapping(address => struct IArbitrator.ArbitratorInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ArbitrationData)4476_storage)": {
            "label": "mapping(bytes32 => struct IArbitrator.ArbitrationData)",
            "numberOfBytes": "32"
          },
          "t_struct(ArbitrationData)4476_storage": {
            "label": "struct IArbitrator.ArbitrationData",
            "members": [
              {
                "label": "requestID",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "btcTxToSign",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "btcTxSigned",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "script",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "merkleProof",
                "type": "t_struct(MerkleProofData)4440_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "utxos",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "blockHeight",
                "type": "t_uint32",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "wTxId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(ArbitratorInfo)4453_storage": {
            "label": "struct IArbitrator.ArbitratorInfo",
            "members": [
              {
                "label": "arbitrator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "registeredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "btcPublicKey",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakedToken",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(MerkleProofData)4440_storage": {
            "label": "struct IArbitrator.MerkleProofData",
            "members": [
              {
                "label": "proof",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "root",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "leaf",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "flags",
                "type": "t_array(t_bool)dyn_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "f90a934abb092a2b037c347d4ffa42ebc9c42682664478067192c975a6ad92b3": {
      "address": "0x448a364a2B2A1aA5B8107a1150aeB616F901511d",
      "txHash": "0x05a7017566e00517dec25d21a7bfbfe60d71a26e962c39a25b2a74b7e3deb61e",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "arbitrationRequestDuration",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:18"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:19"
          },
          {
            "label": "assetOracle",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:20"
          },
          {
            "label": "registerWhiteListContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:22"
          },
          {
            "label": "agreementContractWhitelist",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:25"
          },
          {
            "label": "tokenWhitelist",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:26"
          },
          {
            "label": "arbitratorInfo",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(ArbitratorInfo)4879_storage)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:28"
          },
          {
            "label": "arbitratorList",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:29"
          },
          {
            "label": "arbitrationData",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_bytes32,t_struct(ArbitrationData)4908_storage)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:30"
          },
          {
            "label": "zkpOrder",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bool)dyn_storage": {
            "label": "bool[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ArbitratorInfo)4879_storage)": {
            "label": "mapping(address => struct IArbitrator.ArbitratorInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ArbitrationData)4908_storage)": {
            "label": "mapping(bytes32 => struct IArbitrator.ArbitrationData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ArbitrationData)4908_storage": {
            "label": "struct IArbitrator.ArbitrationData",
            "members": [
              {
                "label": "requestID",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "btcTxToSign",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "btcTxSigned",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "script",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "merkleProof",
                "type": "t_struct(MerkleProofData)4866_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "utxos",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "blockHeight",
                "type": "t_uint32",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "wTxId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "prover",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lockBtcTx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "lockAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "15"
              }
            ],
            "numberOfBytes": "512"
          },
          "t_struct(ArbitratorInfo)4879_storage": {
            "label": "struct IArbitrator.ArbitratorInfo",
            "members": [
              {
                "label": "arbitrator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "registeredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "btcPublicKey",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakedToken",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(MerkleProofData)4866_storage": {
            "label": "struct IArbitrator.MerkleProofData",
            "members": [
              {
                "label": "proof",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "root",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "leaf",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "flags",
                "type": "t_array(t_bool)dyn_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "938c7f0d829c2667c9ff83fcc5483541dd20634056603b0c7845968b0e7a8127": {
      "address": "0x2Ab98f9D0d7b45BC96662888CDd4C80780bdB3c1",
      "txHash": "0x37026f753e6e762a959d0f512419683edd6058f6b0cadc384ac061e45d568aa0",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "arbitrationRequestDuration",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:18"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:19"
          },
          {
            "label": "assetOracle",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:20"
          },
          {
            "label": "registerWhiteListContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:22"
          },
          {
            "label": "agreementContractWhitelist",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:25"
          },
          {
            "label": "tokenWhitelist",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:26"
          },
          {
            "label": "arbitratorInfo",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(ArbitratorInfo)4889_storage)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:28"
          },
          {
            "label": "arbitratorList",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:29"
          },
          {
            "label": "arbitrationData",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_bytes32,t_struct(ArbitrationData)4918_storage)",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:30"
          },
          {
            "label": "zkpOrder",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "Arbitrator",
            "src": "contracts/Arbitrator.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bool)dyn_storage": {
            "label": "bool[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ArbitratorInfo)4889_storage)": {
            "label": "mapping(address => struct IArbitrator.ArbitratorInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ArbitrationData)4918_storage)": {
            "label": "mapping(bytes32 => struct IArbitrator.ArbitrationData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ArbitrationData)4918_storage": {
            "label": "struct IArbitrator.ArbitrationData",
            "members": [
              {
                "label": "requestID",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "btcTxToSign",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "btcTxSigned",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "script",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "merkleProof",
                "type": "t_struct(MerkleProofData)4876_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "utxos",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "blockHeight",
                "type": "t_uint32",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "wTxId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "prover",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lockBtcTx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "lockAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "15"
              }
            ],
            "numberOfBytes": "512"
          },
          "t_struct(ArbitratorInfo)4889_storage": {
            "label": "struct IArbitrator.ArbitratorInfo",
            "members": [
              {
                "label": "arbitrator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "registeredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "btcPublicKey",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakedToken",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(MerkleProofData)4876_storage": {
            "label": "struct IArbitrator.MerkleProofData",
            "members": [
              {
                "label": "proof",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "root",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "leaf",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "flags",
                "type": "t_array(t_bool)dyn_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    }
  }
}
